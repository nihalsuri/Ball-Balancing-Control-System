/**
  ******************************************************************************
  * @file    led_routine.c
  * @authors  NS        Nihal.Suri@student.put.poznan.pl     MM          Maciej.Mirecki@student.put.poznan.pl
  * @version 2.0
  * @date    28-12-2021
  * @brief   PID control algorithm for balancing beam.
  *
  ******************************************************************************
  */
  /* Config --------------------------------------------------------------------*/

/* Includes ------------------------------------------------------------------*/
#include <led_routine.h>

/* Define ---------------------------------------------------------------------*/

/* Macro ---------------------------------------------------------------------*/


/* Public variables ----------------------------------------------------------*/

/* Public function prototypes ------------------------------------------------*/


/**
 * @brief LED control
 * @note green (<0.1% error) blue (0.3 - 0.5% error) red (>0.5% error)
 * @param[in] none
 * @return None
 */


void led_routine(){

	  if(fabs(error) <= 0.3){
		  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, 0);
		  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, 0);
		  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, 1);
	 	  }

	  else if( fabs(error) > 0.31 && fabs(error) < 0.6){
	  		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, 0);
	  		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, 1);
	  		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, 0);
	  	}
	  else	  if( fabs(error) > 0.6){
	  		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, 1);
	  		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, 0);
	  		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, 0);
	  	}
}
